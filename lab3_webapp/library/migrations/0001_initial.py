# Generated by Django 4.1 on 2024-11-07 17:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=30)),
                ('year_of_birth', models.IntegerField(blank=True, null=True)),
                ('year_of_death', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('publishing_year', models.PositiveIntegerField()),
                ('ISBN', models.CharField(max_length=13, unique=True)),
                ('number_of_pages', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('type_of_cover', models.CharField(choices=[('hardcover', 'Hardcover'), ('softcover', 'Softcover'), ('paperback', 'Paperback')], default='hardcover', max_length=10)),
                ('language', models.CharField(max_length=20)),
                ('age_category', models.CharField(choices=[('0-3', '0-3'), ('4-6', '4-6'), ('7-9', '7-9'), ('10-12', '10-12'), ('12+', '12+'), ('16+', '16+'), ('18+', '18+'), ('any', 'Any')], default='any', max_length=5)),
                ('total_copies', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=13, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('passport_series', models.CharField(blank=True, max_length=2, null=True)),
                ('passport_number', models.CharField(max_length=9)),
                ('city', models.CharField(max_length=20)),
                ('street', models.CharField(max_length=30)),
                ('house_number', models.CharField(max_length=5)),
                ('apartment_number', models.CharField(blank=True, max_length=10, null=True)),
                ('zip_code', models.CharField(max_length=10)),
            ],
            options={
                'unique_together': {('passport_series', 'passport_number')},
            },
        ),
        migrations.CreateModel(
            name='PublishingHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('city', models.CharField(max_length=20)),
                ('street', models.CharField(max_length=30)),
                ('house_number', models.CharField(max_length=5)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='library.country')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_date', models.DateField()),
                ('due_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.reader')),
            ],
        ),
        migrations.CreateModel(
            name='BookGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.genre')),
            ],
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.author')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(related_name='books', through='library.BookGenre', to='library.genre'),
        ),
        migrations.AddField(
            model_name='book',
            name='publishing_house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='library.publishinghouse'),
        ),
        migrations.AddField(
            model_name='author',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='library.country'),
        ),
        migrations.AddConstraint(
            model_name='loan',
            constraint=models.CheckConstraint(check=models.Q(('return_date__isnull', True), ('return_date__gte', models.F('loan_date')), _connector='OR'), name='chk_return_date'),
        ),
        migrations.AlterUniqueTogether(
            name='bookgenre',
            unique_together={('book', 'genre')},
        ),
        migrations.AlterUniqueTogether(
            name='bookauthor',
            unique_together={('book', 'author')},
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.CheckConstraint(check=models.Q(('number_of_pages__gt', 0)), name='chk_number_of_pages'),
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.CheckConstraint(check=models.Q(('total_copies__gte', 0)), name='chk_total_copies'),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.CheckConstraint(check=models.Q(('year_of_death__isnull', True), ('year_of_death__gte', models.F('year_of_birth')), _connector='OR'), name='chk_year_of_death'),
        ),
    ]
